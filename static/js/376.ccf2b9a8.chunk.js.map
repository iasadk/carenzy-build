{"version":3,"file":"static/js/376.ccf2b9a8.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/model.js","services/brand.js","views/components/Pagination.js","views/pages/ListCar/Model.js","services/file.js","utils/UploadImage.js","views/pages/ListCar/Brand.js","services/application.js","views/pages/Application.js","services/dealers.js","views/pages/Followers.js","views/pages/Bookmarks.js","views/pages/Dealers.js","services/car.js","utils/UploadVideo.js","views/pages/Like.js","views/pages/Car.js","services/banner.js","views/pages/Banner.js","services/problemReport.js","views/pages/ProblemReport.js","views/layout/route.js","views/layout/Menu.js","views/layout/Breadcrumb.js","views/pages/errors/Error404.js","views/layout/Top.js","views/layout/Layout.js"],"sourcesContent":["const App = () => {\r\n    return (\r\n        <>\r\n            <h2 style={{textAlign: 'center'}}>Dashboard Coming Soon...</h2>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'model';\r\n\r\n    static detailModel(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static listModel(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveModel(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteModel(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'brand';\r\n\r\n    static detailBrand(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static listBrand(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveBrand(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteBrand(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Select } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/model';\r\nimport BrandService from '../../../services/brand';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\n\r\nexport default function Model({ brandId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20,brandId });\r\n    const addModalRef = useRef();\r\n    const [brand, setBrand] = useState([]);\r\n   \r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'Brand',\r\n            dataIndex: 'brandName',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Model?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ];\r\n\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listModel(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    function listBrand() {\r\n        BrandService.listBrand()\r\n        .then(res => { setBrand(res.data || []); }).catch(err => { AntdMsg('Brand data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteModel(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listBrand()\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Model</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addModalRef} {...{ list,brand,brandId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected modules?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, brand,brandId= null } = props;\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : {brandId, status: true }\r\n            );\r\n        }\r\n\r\n    }));\r\n\r\n    \r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailModel(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const handleChange = (v) => { setData({ ...data,...v }); }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n\r\n        service.saveModel(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            setOpen(false);\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ data._id]);\r\n    \r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Modal'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"name\" value={data.name} onChange={e => { handleChange({name:e.target.value}) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Brand\" required>\r\n                                    <Select value={data.brandId} onChange={v => { handleChange({brandId:v}) }} \r\n                                    options={\r\n                                        brand.map(v => (\r\n                                            {\r\n                                                value: v._id,\r\n                                                label: v.name,\r\n                                              }\r\n                                        ))\r\n                                    } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\"+  url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload, Button } from \"antd\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadImage({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={uploadImage}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    listType={listType}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    disabled={disabled}\r\n                >\r\n                    {\r\n                        fileList?.length >= count\r\n                            ? null\r\n                            : listType === 'picture'\r\n                                ? <Button icon={<UploadOutlined />} type=\"dashed\" >Upload</Button>\r\n                                : <div>Upload</div>\r\n                    }\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={uploadImage}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            listType={listType}\r\n            fileList={fileList}\r\n            className=\"image-upload-grid\"\r\n            disabled={disabled}\r\n        >\r\n            {\r\n                fileList?.length >= count\r\n                    ? null\r\n                    : listType === 'picture'\r\n                        ? <Button icon={<UploadOutlined />} type=\"dashed\" >Upload</Button>\r\n                        : <div>Upload</div>\r\n            }\r\n        </Upload>\r\n    }\r\n\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport BrandService from '../../../services/brand';\r\n// import userService from '../../../services/user';\r\n// import ecommService from '../../../services/ecomm';\r\n\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport Model from './Model';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Brand() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            // width: 300,\r\n        },\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'imgUrl',\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Brand',\r\n            dataIndex: '_id',\r\n            width: 200,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id,name:row.name }) }} >Model</Button>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this image?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            BrandService.listBrand(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        BrandService.deleteBrand(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (viewAccess) {\r\n    //         userService.list({ isAll: 1 }).then(res => { setUsers(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    //     }\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Brands</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        BrandService.detailBrand(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n            setAjxRequesting(true);\r\n            BrandService.saveBrand(data).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrl: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Banner'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                        <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"name\" value={data.name} onChange={e => { handleChange({ name: e.target.value })}} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} listType=\"picture\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Model of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Model {...{ brandId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'application';\r\n    // category : \r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/application';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\nexport default function Application({ type }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Data',\r\n            dataIndex: 'data',\r\n            // width: 200,\r\n            render: (v) => <Typography.Paragraph ellipsis={{ expandable: true }}>{v}</Typography.Paragraph>\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n            width: 150,\r\n            render: v => v === 'aboutus'\r\n                ? 'About Us'\r\n                : v === 'termcondition'\r\n                    ? 'Terms & Condition'\r\n                    : v === 'faq'\r\n                        ? 'Faq'\r\n                        : null\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete this Data?\"\r\n                            onConfirm={() => { deleteData(row._id); }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                        </Popconfirm>\r\n                    }\r\n                    {\r\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of  Application</Typography.Title>\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type }} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={5}>\r\n                    {\r\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                        </Form.Item>\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Select value={data.type} onChange={v => { handleChange({ type: v }) }} >\r\n                                        <Select.Option value=\"aboutus\">About us</Select.Option>\r\n                                        <Select.Option value=\"termcondition\">Terms & Condition</Select.Option>\r\n                                        <Select.Option value=\"faq\">Faq</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Data\" required>\r\n                                    <Input.TextArea rows={8} cols={24} placeholder=\"Data\" value={data.data} onChange={e => { handleChange({ data: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'dealer';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/listDealers', { params: data });\r\n    }\r\n    static listFollowers(data) {\r\n        return axios.get(this.baseURL + '/followers/list', { params: data });\r\n    }\r\n    static listBookmarks(data) {\r\n        return axios.get(this.baseURL + '/bookmarks/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static save(data) {\r\n        return axios.post(this.baseURL + \"/saveDealer\", data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Typography } from 'antd';\r\n\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport service from '../../services/dealers';\r\nimport Pagination from '../components/Pagination';\r\n\r\nexport default function Followers({ dealerId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, dealerId });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Dealer Name',\r\n            dataIndex: 'dealerName',\r\n        },\r\n        {\r\n            title: 'Following Name',\r\n            dataIndex: 'followingName',\r\n            // width: 300,\r\n        },\r\n    ];\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listFollowers(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    // const deleteData = (id) => {\r\n    //     service.delete(id).then(res => {\r\n    //         AntdMsg(res.message);\r\n    //         list();\r\n    //         setSelected([]);\r\n    //     }).catch(err => {\r\n    //         AntdMsg(err.message, 'error');\r\n    //     })\r\n    // }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            // minWidth=\"500px\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            {/*<Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name / phone / email\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                \r\n                </Col>\r\n    </Row>*/}\r\n        </Form>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Typography } from 'antd';\r\n\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport service from '../../services/dealers';\r\nimport Pagination from '../components/Pagination';\r\n\r\nexport default function Bookmarks({ dealerId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, dealerId });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Dealer Name',\r\n            dataIndex: 'dealerName',\r\n        },\r\n        {\r\n            title: 'Model Name',\r\n            dataIndex: 'modelName',\r\n            // width: 300,\r\n        },\r\n    ];\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listBookmarks(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    // const deleteData = (id) => {\r\n    //     service.delete(id).then(res => {\r\n    //         AntdMsg(res.message);\r\n    //         list();\r\n    //         setSelected([]);\r\n    //     }).catch(err => {\r\n    //         AntdMsg(err.message, 'error');\r\n    //     })\r\n    // }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            // minWidth=\"500px\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            {/*<Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name / phone / email\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                \r\n                </Col>\r\n    </Row>*/}\r\n        </Form>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tag, Select, DatePicker } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/dealers';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport util from '../../utils/util';\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport Followers from './Followers';\r\nimport Bookmarks from './Bookmarks';\r\n\r\nexport default function Dealers() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const followersModalRef = useRef();\r\n    const bookmarkModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'userName',\r\n            width: 150,\r\n\r\n\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'Bookmarks',\r\n            dataIndex: '_id',\r\n            width: 100,\r\n            render: value => (\r\n                <>\r\n                    <Button type=\"primary\" size=\"small\" onClick={() => { bookmarkModalRef.current.openForm({ _id: value }) }} >Bookmarks</Button>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Followers',\r\n            dataIndex: '_id',\r\n            width: 100,\r\n            render: value => (\r\n                <>\r\n                    <Button type=\"primary\" size=\"small\" onClick={() => { followersModalRef.current.openForm({ _id: value }) }} >Followers</Button>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this dealer?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ];\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Dealers</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            // minWidth=\"500px\"\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <FollowersModal ref={followersModalRef} />\r\n            <BookmarkModal ref={bookmarkModalRef} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name / phone / email\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected dealer?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n            if (dt && dt.avatar) {\r\n                setFileList([{ ...dt.avatar }]);\r\n            } else {\r\n                setFileList([]);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            setOpen(false);\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data?.name || ''), 'userName');\r\n        }\r\n    }, [data.name])\r\n\r\n    useEffect(() => {\r\n        handleChange(fileList?.[0], 'avatar');\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.userName} onChange={e => { handleChange(e.target.value, 'userName') }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange(e.target.value, 'phone') }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange((e.target.value), 'email') }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Data of Birth\" required>\r\n                                            <DatePicker\r\n                                                className=\"w-100\"\r\n                                                value={moment(data?.dateOfBirth)}\r\n                                                format={'YYYY/MM/DD'}\r\n                                                onChange={(v) => { handleChange((v), 'dateOfBirth') }} allowClear={false} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Address\" required>\r\n                                    <Input.TextArea placeholder=\"Address\" value={data.address} onChange={e => { handleChange((e.target.value), 'address') }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange(v, 'status') }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nconst  BookmarkModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Bookmark Details\"\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <Bookmarks dealerId={data._id}/>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\nconst FollowersModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Followers Details\"\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <Followers dealerId={data._id}/>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'car';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static listLikes(data) {\r\n        return axios.get(this.baseURL + '/like/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/'+id, { params: data });\r\n    }\r\n    static saveOne(data) {\r\n        return axios.post(this.baseURL + \"/save-one\", data);\r\n    }\r\n    static saveTwo(id,data) {\r\n        return axios.post(this.baseURL + \"/save-two/\"+ id, data);\r\n    }\r\n    static saveThree(id,data) {\r\n        return axios.post(this.baseURL + \"/save-three/\"+ id, data);\r\n    }\r\n    static saveFour(id,data) {\r\n        return axios.post(this.baseURL + \"/save-four/\"+ id, data);\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload, Button } from \"antd\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadImage({ fileList, setFileList, count = 1, disabled = false }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    return <Upload\r\n        accept=\"video/*\"\r\n        customRequest={uploadImage}\r\n        onChange={handleOnChange}\r\n        onRemove={handleRemove}\r\n        // listType=\"picture-card\"\r\n        fileList={fileList}\r\n        className=\"image-upload-grid\"\r\n        disabled={disabled}\r\n    >\r\n        {fileList?.length >= count ? null :     <Button icon={<UploadOutlined />}>Upload</Button>}\r\n    </Upload>\r\n\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Typography } from 'antd';\r\n\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport service from '../../services/car';\r\nimport Pagination from '../components/Pagination';\r\n\r\nexport default function Like({ carId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, carId });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Dealer Name',\r\n            dataIndex: 'dealerName',\r\n        },\r\n        {\r\n            title: 'Model Name',\r\n            dataIndex: 'modelName',\r\n            // width: 300,\r\n        },\r\n        // {\r\n        //     title: 'Action',\r\n        //     dataIndex: '_id',\r\n        //     width: 70,\r\n        //     render: (v, row) => {\r\n        //         return <>\r\n        //             <Popconfirm\r\n        //                 title=\"Are you sure to delete this dealer?\"\r\n        //                 onConfirm={() => { deleteData(row._id); }}\r\n        //                 okText=\"Yes\"\r\n        //                 cancelText=\"No\"\r\n        //             >\r\n        //                 <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n        //             </Popconfirm>\r\n        //         </>\r\n        //     }\r\n        // },\r\n    ];\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listLikes(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    // const deleteData = (id) => {\r\n    //     service.delete(id).then(res => {\r\n    //         AntdMsg(res.message);\r\n    //         list();\r\n    //         setSelected([]);\r\n    //     }).catch(err => {\r\n    //         AntdMsg(err.message, 'error');\r\n    //     })\r\n    // }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            // minWidth=\"500px\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            {/*<Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name / phone / email\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                \r\n                </Col>\r\n    </Row>*/}\r\n        </Form>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, DatePicker, Divider } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/car';\r\nimport serviceBrand from '../../services/brand';\r\nimport serviceModel from '../../services/model';\r\nimport moment from \"moment\";\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport util from '../../utils/util';\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport UploadVideo from \"../../utils/UploadVideo\"\r\nimport Like from './Like';\r\n\r\nexport default function Car() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const likesModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Collaboration',\r\n            dataIndex: 'collaboration',\r\n            width: 170,\r\n        },\r\n        {\r\n            title: 'Fuel Type',\r\n            dataIndex: 'fuelType',\r\n            // width: 170,\r\n        },\r\n        {\r\n            title: 'RTO',\r\n            dataIndex: 'rto',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Model',\r\n            dataIndex: 'modelName',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Brand',\r\n            dataIndex: 'brandName',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Asking Price',\r\n            dataIndex: 'askingPrice',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Likes',\r\n            dataIndex: '_id',\r\n            width: 100,\r\n            render: value => (\r\n                <>\r\n                    <Button type=\"primary\" size=\"small\" onClick={() => { likesModalRef.current.openForm({ _id: value }) }} >Likes</Button>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Product?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Typography.Title level={5}>List of Cars</Typography.Title>\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <LikesModal ref={likesModalRef} />\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or slug\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        {/*<Select placeholder=\"Category\" allowClear >\r\n                            {\r\n                                categories.map(v => (\r\n                                    <Select.Option key={v._id} value={v._id}>{v.name}</Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>*/}\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected Product?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n    const [enginePhotoList, setEnginePhotoList] = useState([])\r\n    const [engineVideoList, setEngineVideoList] = useState([]);\r\n    const [exteriorPhotoList, setExteriorPhotoList] = useState([]);\r\n    const [exteriorVideoList, setExteriorVideoList] = useState([])\r\n    const [interiorPhotoList, setInteriorPhotoList] = useState([]);\r\n    const [interiorVideoList, setInteriorVideoList] = useState([])\r\n    const [rcPhotoList, setRcPhotoList] = useState([])\r\n    const [chassisPhotoList, setChassisPhotoList] = useState([])\r\n    const [insurancePhotoList, setInsurancePhotoList] = useState([])\r\n    const [additionalPhotoList, setAdditionalPhotoList] = useState([])\r\n\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setEnginePhotoList(res.data?.enginePhotoList || []);\r\n            setEngineVideoList(res.data?.engineVideoList || []);\r\n            setExteriorPhotoList(res.data?.exteriorPhotoList || []);\r\n            setExteriorVideoList(res.data?.exteriorVideoList || []);\r\n            setInteriorPhotoList(res.data?.interiorPhotoList || []);\r\n            setInteriorVideoList(res.data?.interiorVideoList || []);\r\n            setRcPhotoList(res.data?.rcPhotoList || []);\r\n            setChassisPhotoList(res.data?.chassisPhotoList || []);\r\n            setInsurancePhotoList(res.data?.insurancePhotoList || []);\r\n            setAdditionalPhotoList(res.data?.AdditionalPhotoList || []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        try {\r\n            (() => {\r\n                return currentTab === 0\r\n                    ? service.saveOne(data)\r\n                    : currentTab === 1\r\n                        ? service.saveTwo(data._id, data)\r\n                        : currentTab === 2\r\n                            ? service.saveThree(data._id, data)\r\n                            : service.saveFour(data._id, data);\r\n\r\n            })().then(res => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 4);\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [currentTab, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setCurrentTab(0);\r\n            setEnginePhotoList([]);\r\n            setEngineVideoList([]);\r\n            setExteriorPhotoList([]);\r\n            setExteriorVideoList([]);\r\n            setInteriorPhotoList([]);\r\n            setInteriorVideoList([]);\r\n            setRcPhotoList([]);\r\n            setChassisPhotoList([]);\r\n            setInsurancePhotoList([]);\r\n            setAdditionalPhotoList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ enginePhotoList });\r\n        handleChange({ engineVideoList });\r\n        handleChange({ exteriorPhotoList });\r\n        handleChange({ exteriorVideoList });\r\n        handleChange({ interiorPhotoList });\r\n        handleChange({ interiorVideoList });\r\n        handleChange({ rcPhotoList });\r\n        handleChange({ chassisPhotoList });\r\n        handleChange({ insurancePhotoList });\r\n        handleChange({ AdditionalPhotoList: additionalPhotoList });\r\n    }, [, engineVideoList, enginePhotoList, exteriorPhotoList, exteriorVideoList, interiorPhotoList, interiorVideoList, rcPhotoList, chassisPhotoList, insurancePhotoList, additionalPhotoList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Car'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 3 ? \"Save\" : \"Next\"}</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"Basic Details\",\r\n                                key: 0,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <BasicDetails {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"Car Info\",\r\n                                key: 1,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <CarInfo {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"Photos/Videos\",\r\n                                key: 2,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <Photos {...{ data, handleChange, save, enginePhotoList, engineVideoList, setEngineVideoList, setEnginePhotoList, exteriorPhotoList, setExteriorPhotoList, exteriorVideoList, setExteriorVideoList, interiorPhotoList, setInteriorPhotoList, interiorVideoList, setInteriorVideoList, rcPhotoList, setRcPhotoList, chassisPhotoList, setChassisPhotoList, insurancePhotoList, setInsurancePhotoList, additionalPhotoList, setAdditionalPhotoList }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            },\r\n                            {\r\n                                label: \"Registration Details\",\r\n                                key: 3,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <RegistrationDetails {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                                disabled: !data._id\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst BasicDetails = ({ data, handleChange }) => {\r\n    const [brand, setBrand] = useState([])\r\n    const [model, setModel] = useState([])\r\n    useEffect(() => {\r\n        serviceBrand.listBrand().then(res => {\r\n            setBrand(res.data);\r\n        })\r\n            .catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query = { brandId: data?.brandId };\r\n        serviceModel.listModel(query).then(res => {\r\n            setModel(res.data)\r\n        })\r\n            .catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            })\r\n    }, [data.brandId])\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Asking Price\" required>\r\n                            <Input placeholder=\"₹500000\" value={data.askingPrice} onChange={e => { handleChange({ askingPrice: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Brand\" required>\r\n                            <Select value={data.brandId} onChange={v => { handleChange({ brandId: v, modelId: null }) }} >\r\n                                {brand.map(item => <Select.Option key={item._id} value={item._id} >{item.name}</Select.Option>)}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Models\" required>\r\n                                <Select value={data.modelId} onChange={v => { handleChange({ modelId: v }) }} >\r\n                                    {model.map(item => <Select.Option key={item._id} value={item._id} >{item.name}</Select.Option>)}\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Manufacturing Month\" required>\r\n                                <DatePicker\r\n                                    picker='month'\r\n                                    className=\"w-100\"\r\n                                    value={moment(data?.manufacturingMonth)}\r\n                                    format=\"MMMM\"\r\n                                    onChange={(v) => { handleChange({ manufacturingMonth: v }) }} allowClear={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Manufacturing Year\" required>\r\n                                <DatePicker\r\n                                    picker='year'\r\n                                    className=\"w-100\"\r\n                                    value={moment(data?.manufacturingYear)}\r\n                                    onChange={(v) => { handleChange({ manufacturingYear: v }) }} allowClear={false} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Varient\" required>\r\n                                <Input placeholder=\"varient\" value={data.varient} onChange={e => { handleChange({ varient: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Km's Driven\" required>\r\n                                <Input type=\"text\" placeholder=\"500 Km\" value={data.kmsDrive} onChange={e => { handleChange({ kmsDrive: util.handleInteger(e.target.value) }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Fuel Type\" required>\r\n                                <Select value={data.fuelType} onChange={v => { handleChange({ fuelType: v }) }} >\r\n                                    <Select.Option value=\"Diesel\" >Diesel</Select.Option>\r\n                                    <Select.Option value=\"Petrol\" >Petrol</Select.Option>\r\n                                    <Select.Option value=\"Petrol + CNG\" >Petrol + CNG</Select.Option>\r\n                                    <Select.Option value=\"Petrol + LPG\" >Petrol + LPG</Select.Option>\r\n                                    <Select.Option value=\"Electric\" >Electric</Select.Option>\r\n                                    <Select.Option value=\"Hybrid\" >Hybrid</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Transmission Type\" required>\r\n                                <Select value={data.transmissionType} onChange={v => { handleChange({ transmissionType: v }) }} >\r\n                                    <Select.Option value=\"Automatic\" >Automatic</Select.Option>\r\n                                    <Select.Option value=\"Manual\" >Manual</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Form.Item label=\"Number of Keys\" required>\r\n                                <Select value={data.keys} onChange={v => { handleChange({ keys: v }) }} >\r\n                                    <Select.Option value=\"1\" >1</Select.Option>\r\n                                    <Select.Option value=\"2\" >2</Select.Option>\r\n                                    <Select.Option value=\"3\" >3</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst CarInfo = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Vehicle Color\" required>\r\n                            <Input placeholder=\"Black\" value={data.vehicleColor} onChange={e => { handleChange({ vehicleColor: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"RTO\" required>\r\n                            <Input placeholder=\"MH-19\" value={data.rto} onChange={e => { handleChange({ rto: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Registration State\" required>\r\n                            <Input placeholder=\"Maharashtra\" value={data.registrationState} onChange={e => { handleChange({ registrationState: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Registration City\" required>\r\n                            <Input placeholder=\"Mumbai\" value={data.registrationCity} onChange={e => { handleChange({ registrationCity: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Number Of Owners\" required>\r\n                            <Input placeholder=\"1\" value={data.numberOfOwners} onChange={e => { handleChange({ numberOfOwners: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Insurance Valid till Month\" required>\r\n                            <DatePicker\r\n                                picker='month'\r\n                                className=\"w-100\"\r\n                                value={moment(data?.insuranceValidTillMonth)}\r\n                                format=\"MMMM\"\r\n                                onChange={(v) => { handleChange({ insuranceValidTillMonth: v }) }} allowClear={false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Insurance Valid till Year\" required>\r\n                            <DatePicker\r\n                                picker='year'\r\n                                className=\"w-100\"\r\n                                value={moment(data?.insuranceValidTillYear)}\r\n                                onChange={(v) => { handleChange({ insuranceValidTillYear: v }) }} allowClear={false} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Type of Insurance\" required>\r\n                            <Select value={data.typeOfInsurance} onChange={v => { handleChange({ typeOfInsurance: v }) }} >\r\n                                <Select.Option value=\"Comprehensive\" >Comprehensive</Select.Option>\r\n                                <Select.Option value=\"Zero Depreciation\" >Zero Depreciation</Select.Option>\r\n                                <Select.Option value=\"3rd Party\" >3rd Party</Select.Option>\r\n                                <Select.Option value=\"Insurance Expired\" >Insurance Expired</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"No Claim Bonus\" required>\r\n                            <Select value={data.noClaimBonus} onChange={v => { handleChange({ noClaimBonus: v }) }} >\r\n                                <Select.Option value={true} >Yes</Select.Option>\r\n                                <Select.Option value={false} >No</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"No Claim Bonus Percentage(%)\" required>\r\n                            <Input placeholder=\"1\" type=\"number\" value={data.noClaimBonusPercentage} onChange={e => { handleChange({ noClaimBonusPercentage: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Photos = ({ data, handleChange, enginePhotoList, setEnginePhotoList, exteriorPhotoList, setExteriorPhotoList, exteriorVideoList, setExteriorVideoList, interiorPhotoList, setInteriorPhotoList, setInteriorVideoList, interiorVideoList, engineVideoList, setEngineVideoList, rcPhotoList, setRcPhotoList, chassisPhotoList, setChassisPhotoList, insurancePhotoList, setInsurancePhotoList, additionalPhotoList, setAdditionalPhotoList }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Engine Photos\">\r\n                            <UploadImage {...{ fileList: enginePhotoList, setFileList: setEnginePhotoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Engine Videos\">\r\n                            <UploadVideo {...{ fileList: engineVideoList, setFileList: setEngineVideoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Exterior Photos\">\r\n                            <UploadImage {...{ fileList: exteriorPhotoList, setFileList: setExteriorPhotoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Exterior Videos\">\r\n                            <UploadVideo {...{ fileList: exteriorVideoList, setFileList: setExteriorVideoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Interior Photos\">\r\n                            <UploadImage {...{ fileList: interiorPhotoList, setFileList: setInteriorPhotoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Interior Videos\">\r\n                            <UploadVideo {...{ fileList: interiorVideoList, setFileList: setInteriorVideoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Divider />\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"RC Photos\">\r\n                            <UploadImage {...{ fileList: rcPhotoList, setFileList: setRcPhotoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Chassis Number Photos\">\r\n                            <UploadImage {...{ fileList: chassisPhotoList, setFileList: setChassisPhotoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Insurance Photos\">\r\n                            <UploadImage {...{ fileList: insurancePhotoList, setFileList: setInsurancePhotoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Additional Photos\">\r\n                            <UploadImage {...{ fileList: additionalPhotoList, setFileList: setAdditionalPhotoList }} count={10} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst RegistrationDetails = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Registration Number\" required>\r\n                            <Input placeholder=\"01010101010101\" value={data.registrationNumber} onChange={e => { handleChange({ registrationNumber: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Ownership Type\" required>\r\n                            <Input placeholder=\"Black\" value={data.ownershipType} onChange={e => { handleChange({ ownershipType: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Chassis Number\" required>\r\n                            <Input placeholder=\"Chassis Number\" value={data.chassisNumber} onChange={e => { handleChange({ chassisNumber: e.target.value }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"RC avaibility\" required>\r\n                            <Select value={data.rcAvailibity} onChange={v => { handleChange({ rcAvailibity: v }) }} >\r\n                                <Select.Option value=\"Original\" >Original</Select.Option>\r\n                                <Select.Option value=\"Duplicate\" >Duplicate</Select.Option>\r\n                                <Select.Option value=\"Lost\" >Lost</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Chassis Number Embossing\" required>\r\n                            <Select value={data.chassisNumberEmbossing} onChange={v => { handleChange({ chassisNumberEmbossing: v }) }} >\r\n                                <Select.Option value=\"OK\" >OK</Select.Option>\r\n                                <Select.Option value=\"Rusted\" >Rusted</Select.Option>\r\n                                <Select.Option value=\"Repunched\" >Repunched</Select.Option>\r\n                                <Select.Option value=\"No Traceable\" >No Traceable</Select.Option>\r\n                                <Select.Option value=\"Mis-Match\" >Mis-Match</Select.Option>\r\n                                <Select.Option value=\"Incomplete\" >Incomplete</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst LikesModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        }\r\n    }));\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Likes Details\"\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                maskClosable={false}\r\n                width={1400}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <Like carId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'banner';\r\n\r\n    // for Banners : \r\n    static bannerDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static bannerList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static bannerSave(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static bannerDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../services/banner';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\nimport UploadImage from '../../utils/UploadImage';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function BannerImage() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'imgUrls',\r\n            render: (v) => {\r\n                    return (\r\n                        v.map((item,index)=>(\r\n                             <Image key={index} src={item?.url} height={80} />\r\n                        ))\r\n                    )}\r\n        },\r\n        {\r\n            title: 'Uploaded At',\r\n            dataIndex: 'createdAt',\r\n            width: 300,\r\n            render: (v) => {\r\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n            }\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n            width: 80,\r\n            render: (_, row) => {\r\n                return (<span>{row.type}</span>)\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            hidden: !addAccess && !editAccess && !deleteAccess && !viewAccess,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {\r\n                        deleteAccess\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete this image?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(row._id); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        editAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                    {\r\n                        !editAccess && viewAccess\r\n                            ? <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                            : null\r\n                    }\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            service.bannerList(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.bannerDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (viewAccess) {\r\n    //         userService.list({ isAll: 1 }).then(res => { setUsers(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    //     }\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Banners</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\r\n                    </Form.Item>\r\n                </Col>\r\n                {/* <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={5}>\r\n                    {\r\n                        addAccess\r\n                            ? <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                                <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                            </Form.Item>\r\n                            : null\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    // const [changeForm, setChangeForm] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n    \r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrls || []);\r\n            // setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n            setAjxRequesting(true);\r\n            service.bannerSave(data).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrls: fileList });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Banner'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={10} listType=\"picture\"/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Select value={data.type} onChange={v => { handleChange({ type: v }) }} >\r\n                                        <Select.Option value=\"Start\">Start</Select.Option>\r\n                                        <Select.Option value=\"OTP\">OTP</Select.Option>\r\n                                        <Select.Option value=\"Login\">Login</Select.Option>\r\n                                        <Select.Option value=\"Permission\">Permission</Select.Option>\r\n                                        <Select.Option value=\"Bidding\">Bidding</Select.Option>\r\n                                        <Select.Option value=\"Home\">Home</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'problemreport';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Typography } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport service from '../../services/problemReport';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\nexport default function ProblemReport() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Problem',\r\n            dataIndex: 'problem',\r\n        },\r\n        {\r\n            title: 'DealerId',\r\n            dataIndex: 'dealerId',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this dealer?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                </>\r\n            }\r\n        },\r\n    ];\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Problem Report</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            // minWidth=\"500px\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name / phone / email\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                \r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};","import { DashboardOutlined, UserOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Model from '../pages/ListCar/Model';\r\nimport Brand from '../pages/ListCar/Brand';\r\nimport Application from \"../pages/Application\"\r\nimport Dealers from \"../pages/Dealers\";\r\nimport Car from '../pages/Car'\r\nimport Banner from '../pages/Banner';\r\nimport ProblemReport from '../pages/ProblemReport';\r\nimport Like from '../pages/Like';\r\n\r\n\r\nconst routes = [\r\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard },\r\n    { title: 'Dealers', icon: UserOutlined, url: '/dealers', component: Dealers },\r\n    { title: 'Car', icon: UserOutlined, url: '/car', component: Car },\r\n    { title: 'Banners', icon: ApartmentOutlined, url: '/banner', component: Banner },\r\n\r\n\r\n    {\r\n        title: 'List Car', icon: BankOutlined, url: '/list',  children: [\r\n            { title: 'Brand', icon: ApartmentOutlined, url: '/', component: Brand },\r\n            { title: 'Model', icon: ApartmentOutlined, url: '/model', component: Model },\r\n        ]\r\n    },\r\n\r\n    { title: 'Problem Report', icon: CalendarOutlined, url: '/problemreport', component: ProblemReport },\r\n    { title: 'Application', icon: CalendarOutlined, url: '/application', component: Application },\r\n\r\n].filter(v => (!v.hidden) || v.children?.length);\r\n\r\nexport default routes;","import { Menu } from 'antd';\r\nimport React from 'react';\r\nimport routes from './route';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst items = [...routes];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach((v, i) => {\r\n        if (v.children?.length) {\r\n            arr[i] = {\r\n                ...arr[i],\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            arr[i] = {\r\n                ...v,\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle(items);\r\n\r\nconst App = () => {\r\n    const paths = [];\r\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\r\n        paths.push(prev + '/' + cur);\r\n        return prev + '/' + cur;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Menu\r\n                    defaultSelectedKeys={[paths.pop()]}\r\n                    defaultOpenKeys={[...paths]}\r\n                    mode=\"inline\"\r\n                    // theme=\"dark\"\r\n                    items={items}\r\n                    style={{ height: '100vh' }}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import { Breadcrumb } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport routes from \"./route\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        }\r\n        newRoutes.push({ title: v.title, url: prevBaseUrl + v.url })\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\nexport default function MyBreadcrumb() {\r\n    const location = useLocation().pathname;\r\n    const [breads, setBreads] = useState([]);\r\n    useEffect(() => {\r\n        const paths = [];\r\n        location.split('/')?.reduce((prev, cur) => {\r\n            paths.push(prev + '/' + cur);\r\n            return prev + '/' + cur;\r\n        });\r\n        setBreads(newRoutes.filter(v => paths.includes(v.url)).reverse());\r\n    }, [location]);\r\n\r\n    return (\r\n        <Breadcrumb separator=\"\">\r\n            {\r\n                breads?.map((v, i) => {\r\n                    if (i === breads.length - 1) {\r\n                        return <Breadcrumb.Item key={v.url}>{v.title}</Breadcrumb.Item>\r\n                    } else {\r\n                        return <React.Fragment key={v.url}>\r\n                            <Breadcrumb.Item><Link to={v.url + '/'}>{v.title}</Link></Breadcrumb.Item>\r\n                            <Breadcrumb.Separator>/</Breadcrumb.Separator>\r\n                        </React.Fragment>\r\n                    }\r\n                })\r\n            }\r\n        </Breadcrumb>\r\n    )\r\n};\r\n","import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import { Avatar, Layout, Menu, Image } from \"antd\";\r\nimport { UserOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport commonObj from \"../../commonObj\";\r\n\r\n\r\n\r\n\r\nexport default function Top() {\r\n\r\n    const items = [\r\n        {\r\n            label: commonObj?.name ? commonObj.name : 'You',\r\n            icon: <Avatar shape=\"circle\" size={32}\r\n                src={\r\n                    commonObj?.avatar?.url\r\n                        ?\r\n                        <Image\r\n                            src={commonObj?.avatar.url}\r\n                            style={{\r\n                                width: 32,\r\n                            }}\r\n                            preview={false}\r\n                        />\r\n                        : null\r\n                }\r\n                icon={!commonObj?.avatar?.url ? <UserOutlined /> : null}\r\n            />,\r\n            key: 'profile',\r\n        },\r\n        {\r\n            label: 'Logout',\r\n            icon: <LogoutOutlined />,\r\n            key: 'logout',\r\n            style: { color: 'red' },\r\n            onClick: () => { window.localStorage.clear(); window.location.reload(); }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Layout.Header style={{ padding: 0, height: 'auto' }} >\r\n                <Menu mode=\"horizontal\" items={items} style={{ lineHeight: '46px' }} />\r\n            </Layout.Header>\r\n        </>\r\n    );\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { Card, Layout } from \"antd\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\nimport routes from \"./route\";\r\nimport Breadcrumb from \"./Breadcrumb\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport Top from \"./Top\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\n\r\nexport default function MyLayout() {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Layout.Sider\r\n                    width={250}\r\n                    collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}\r\n                    style={{\r\n                        overflow: 'auto',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        maxWidth: '300px!important',\r\n                        width: '300px!important'\r\n                    }}\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu />\r\n                </Layout.Sider>routes\r\n                <Layout className=\"site-layout\">\r\n                    <Top />\r\n\r\n                    <Layout.Content\r\n                        style={{\r\n                            margin: '24px 16px 0 240px',\r\n                            overflow: 'initial',\r\n                            marginLeft: !collapsed ? '230px' : '60px'\r\n                        }}\r\n                    >\r\n                        <Breadcrumb />\r\n                        <Card bordered>\r\n                            <Routes>\r\n                                {newRoutes.map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["style","textAlign","service","id","data","axios","this","baseURL","params","query","ids","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","Model","brandId","useState","setData","loading","setLoading","selected","setSelected","addModalRef","useRef","brand","setBrand","columns","title","dataIndex","width","render","v","row","onConfirm","deleteData","_id","okText","cancelText","type","size","danger","icon","DeleteOutlined","EditOutlined","onClick","openForm","list","listModel","then","res","map","key","extra","catch","err","finally","deleteModel","AntdMsg","message","tableColumns","item","ellipsis","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","BrandService","level","pagination","position","dataSource","scroll","y","x","AddForm","ref","onSubmitCapture","className","gutter","span","marginBottom","placeholder","value","e","target","allowClear","htmlType","float","PlusOutlined","forwardRef","ajxRequesting","setAjxRequesting","open","setOpen","useImperativeHandle","dt","status","handleChange","save","saveModel","Object","keys","detailModel","top","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","name","options","url","config","UploadImage","fileList","setFileList","count","cropImage","listType","uploadImage","onSuccess","onError","file","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","handleOnChange","fl","handleRemove","aspect","shape","quality","rotate","accept","customRequest","onRemove","UploadOutlined","addAccess","commonObj","includes","editAccess","deleteAccess","addNewModalRef","entries","forEach","ent","varDt","k","split","i","parseInt","fileType","imgUrl","ModelModal","rows","cols","Followers","dealerId","Bookmarks","avatar","util","userName","phone","email","moment","dateOfBirth","format","address","BookmarkModal","FollowersModal","Like","carId","currentTab","setCurrentTab","enginePhotoList","setEnginePhotoList","engineVideoList","setEngineVideoList","exteriorPhotoList","setExteriorPhotoList","exteriorVideoList","setExteriorVideoList","interiorPhotoList","setInteriorPhotoList","interiorVideoList","setInteriorVideoList","rcPhotoList","setRcPhotoList","chassisPhotoList","setChassisPhotoList","insurancePhotoList","setInsurancePhotoList","additionalPhotoList","setAdditionalPhotoList","AdditionalPhotoList","activeKey","items","children","borderTop","BasicDetails","CarInfo","Photos","RegistrationDetails","model","setModel","serviceBrand","serviceModel","askingPrice","modelId","picker","manufacturingMonth","manufacturingYear","varient","kmsDrive","fuelType","transmissionType","vehicleColor","rto","registrationState","registrationCity","numberOfOwners","insuranceValidTillMonth","insuranceValidTillYear","typeOfInsurance","noClaimBonus","noClaimBonusPercentage","registrationNumber","ownershipType","chassisNumber","rcAvailibity","chassisNumberEmbossing","LikesModal","imgUrls","routes","DashboardOutlined","component","Dashboard","UserOutlined","followersModalRef","bookmarkModalRef","isActive","color","likesModalRef","filter","hidden","ApartmentOutlined","index","src","height","_","EyeOutlined","BankOutlined","ModelModalRef","CalendarOutlined","expandable","convertMultiToSingle","arr","prevBaseUrl","to","paths","useLocation","pathname","reduce","prev","cur","push","defaultSelectedKeys","pop","defaultOpenKeys","mode","newRoutes","MyBreadcrumb","location","breads","setBreads","reverse","separator","Error404","subTitle","Top","preview","LogoutOutlined","window","localStorage","clear","reload","padding","lineHeight","MyLayout","collapsed","setCollapsed","minHeight","collapsible","onCollapse","overflow","left","bottom","maxWidth","Menu","margin","marginLeft","path","element"],"sourceRoot":""}