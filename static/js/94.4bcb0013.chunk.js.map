{"version":3,"file":"static/js/94.4bcb0013.chunk.js","mappings":"mRAEA,EADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,2VAA+V,KAAQ,OAAQ,MAAS,Y,UCK9gBA,EAAe,SAAsBC,EAAOC,GAC9C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGJ,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLI,KAAMC,IAEV,EACAP,EAAaQ,YAAc,eAC3B,MAA4BL,EAAAA,WAAiBH,G,sCCN9B,SAASS,IACpB,OAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAC5B,GAA0CJ,EAAAA,EAAAA,WAAS,GAAM,eAAlDK,EAAa,KAAEC,EAAgB,KAmBtC,OACI,+BACI,SAAC,IAAG,CAACC,QAAQ,eAAeC,MAAM,MAAMC,MAAO,CAAEC,gBAAiB,YAAaC,gBAAiB,0CAA2CC,OAAQ,QAASC,WAAY,IAAK,UACzK,SAAC,IAAG,CAACJ,MAAO,CAAEC,gBAAiB,QAASI,QAAS,YAC7CC,GAAI,CAACC,KAAM,IACXC,GAAI,CAACD,KAAM,IACXE,GAAI,CAACF,KAAM,IAAI,UAEf,UAAC,IAAG,CAACG,OAAQ,CAAC,GAAI,IAAKX,MAAM,SAASD,QAAQ,eAAc,WACxD,SAAC,IAAG,WACA,SAAC,IAAK,CAACa,IAAI,uBAAuBC,SAAS,OAE/C,SAAC,IAAG,WACA,SAAC,IAAI,CAACC,SAAUjB,EAAekB,WAAW,SAACC,EAAA,EAAe,CAACf,MAAO,CAAEgB,SAAU,IAAMC,MAAI,IAAI,UACxF,iBAAMC,SAAU,SAAAC,GAAOA,EAAEC,gBAAkB,EAAGC,aAAa,MAAMC,YAAY,EAAM,UAC/E,UAAC,IAAI,CAACC,WAAW,EAAMC,UAAW,CAAEC,MAAO,KAAM,WAC7C,SAAC,UAAgB,CAACC,MAAO,EAAG1B,MAAO,CAAC2B,UAAW,UAAU,sBACzD,SAAC,IAAK,CACF3B,MAAO,CAAC4B,OAAQ,YAChBC,KAAK,SACLC,QAAQ,SAACC,EAAA,EAAY,IACrBC,MAAOxC,EACPyC,SAAU,SAACd,GAAQ1B,EAAY0B,EAAEe,OAAOF,MAAO,EAC/CG,YAAY,mBAChB,SAAC,aAAc,CACXnC,MAAO,CAAC4B,OAAQ,YAChBC,KAAK,SACLC,QAAQ,SAAC,EAAY,IACrBE,MAAOtC,EACPuC,SAAU,SAACd,GAAQxB,EAAYwB,EAAEe,OAAOF,MAAO,EAC/CG,YAAY,cAChB,SAAC,IAAM,CAACC,OAAK,EAACC,KAAK,UAAUC,SAAS,SAASC,QAAS,kBA/CxF1C,GAAiB,QACjB2C,EAAAA,EAAAA,MAAc,CAAEC,KAAMjD,EAAUE,SAAUA,IAAYgD,MAAK,SAAAC,IACvDC,EAAAA,EAAAA,IAAQD,EAAIE,SACZC,EAAAA,EAAAA,YAAiBH,EAAII,MACrBC,OAAOC,SAASC,QACpB,IAAGC,OAAM,SAACC,GACqB,kBAAhBA,EAAIP,SACXD,EAAAA,EAAAA,IAAQQ,EAAIP,QAAQQ,OAAOC,KAAKF,EAAIP,SAAS,IAAI,GAAI,UAErDD,EAAAA,EAAAA,IAAQQ,EAAIP,QAAS,QAE7B,IAAGU,SAAQ,WACP1D,GAAiB,EACrB,GAkCqG,EAAEG,MAAO,CAAC4B,OAAQ,YAAY,oCAW3I,C","sources":["../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js","views/pages/Login.js"],"sourcesContent":["// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);","import { Input, Button, Spin, Row, Col, Typography, Image, Card } from 'antd';\r\nimport { UserOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\nimport service from '../../services/user';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport util from '../../utils/util';\r\n\r\nexport default function Login() {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const login = () => {\r\n        setAjxRequesting(true);\r\n        service.login({ code: userName, password: password }).then(res => {\r\n            AntdMsg(res.message);\r\n            util.setUserData(res.data);\r\n            window.location.reload();\r\n        }).catch((err) => {\r\n            if (typeof err.message !== 'string') {\r\n                AntdMsg(err.message[Object.keys(err.message)[0]][0], 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error')\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"space-around\" align=\"top\" style={{ backgroundColor: \"#fa680900\", backgroundImage: \"url('admin/image/login-background.png')\", height: '100vh', paddingTop: 60 }}>\r\n                <Col style={{ backgroundColor: 'white', padding: '50px 0px' }} \r\n                    xs={{span: 22}}\r\n                    lg={{span: 14}}\r\n                    xl={{span: 10}}\r\n                >\r\n                    <Row gutter={[60, 60]} align=\"middle\" justify=\"space-around\">\r\n                        <Col>\r\n                            <Image src=\"admin/image/logo.png\" preview={false} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                                <form onSubmit={e => { e.preventDefault(); }} autoComplete=\"off\" spellCheck={false}>\r\n                                    <Card hoverable={true} bodyStyle={{ width: 280 }}>\r\n                                        <Typography.Title level={3} style={{textAlign: 'center'}}>Welcome</Typography.Title>\r\n                                        <Input\r\n                                            style={{margin: '10px 0px'}}\r\n                                            size=\"middle\"\r\n                                            prefix={<UserOutlined />}\r\n                                            value={userName}\r\n                                            onChange={(e) => { setUserName(e.target.value) }}\r\n                                            placeholder=\"Employee Code\" />\r\n                                        <Input.Password\r\n                                            style={{margin: '10px 0px'}}\r\n                                            size=\"middle\"\r\n                                            prefix={<LockOutlined />}\r\n                                            value={password}\r\n                                            onChange={(e) => { setPassword(e.target.value) }}\r\n                                            placeholder=\"Password\" />\r\n                                        <Button block type=\"primary\" htmlType=\"submit\" onClick={() => login()} style={{margin: '10px 0px'}}>Login</Button>\r\n                                    </Card>\r\n                                </form>\r\n                            </Spin>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};"],"names":["LockOutlined","props","ref","React","AntdIcon","_objectSpread","icon","LockOutlinedSvg","displayName","Login","useState","userName","setUserName","password","setPassword","ajxRequesting","setAjxRequesting","justify","align","style","backgroundColor","backgroundImage","height","paddingTop","padding","xs","span","lg","xl","gutter","src","preview","spinning","indicator","LoadingOutlined","fontSize","spin","onSubmit","e","preventDefault","autoComplete","spellCheck","hoverable","bodyStyle","width","level","textAlign","margin","size","prefix","UserOutlined","value","onChange","target","placeholder","block","type","htmlType","onClick","service","code","then","res","AntdMsg","message","util","data","window","location","reload","catch","err","Object","keys","finally"],"sourceRoot":""}